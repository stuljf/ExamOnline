<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation=" 
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 组件扫描 -->
	<context:component-scan base-package="henu.dao" />
	<context:component-scan base-package="henu.service" />
	<context:component-scan base-package="henu.auto" />

	<!-- 加载配置文件 -->
	<context:property-placeholder
		location="classpath:db.properties,classpath:res.properties"
		file-encoding="UTF-8" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${mysql.driverClass}" />
		<property name="jdbcUrl" value="${mysql.url}" />
		<property name="user" value="${mysql.user}" />
		<property name="password" value="${mysql.password}" />
		<property name="initialPoolSize" value="${mysql.initialPoolSize}" />
		<property name="maxPoolSize" value="${mysql.maxPoolSize}" />
		<property name="maxStatements" value="${mysql.maxStatements}" />
		<property name="acquireIncrement" value="${mysql.acquireIncrement}" />
	</bean>

	<!-- DBUtils的queryRunner注入 -->
	<bean id="queryRunner" class="org.apache.commons.dbutils.QueryRunner"
		scope="prototype">
		<constructor-arg name="ds" ref="dataSource" />
	</bean>

	<!-- 事务管理器 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 声明式事务管理 -->
	<!-- 配置事务管理：xml方式 -->
	<!-- 事务管理器，jdbc的DataSourceTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 事务的传播行为 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 传播行为 -->
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="change*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- 事务的切面：需要AOPjar包支持 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* henu.service.*.*(..))" />
	</aop:config>

	<!-- 任务调度器工厂 -->
	<bean id="stdSchedulerFactory" class="org.quartz.impl.StdSchedulerFactory" />

	<!-- springUtil的创建 ，实现ApplicationContextAware接口 -->
	<bean id="springUtil" class="henu.util.SpringUtil" scope="singleton" />

	<!-- 自定义配置文件获取 -->
	<bean id="propertyConfigurer" class="henu.util.PropertyUtil" scope="singleton">
		<property name="location" value="classpath:res.properties"/>
		<property name="fileEncoding" value="UTF-8"/>
	</bean>

</beans>      